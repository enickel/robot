##  Enickel - Eduardo.nickel@telefonica.com
##  
##  Multicast channel validation - Check if it is possible to open video channels.
##

*** Settings ***
Library    Process   
Library    Collections  
Library    DateTime 
Library    DynamicTestCases.py

*** Variables ***

${HG_IP}	192.168.15.1

&{mcast_1}      nome=tvcamara      channel=4      ip=239.128.2.46
&{mcast_2}      nome=tvsenado      channel=5      ip=239.128.2.48
&{mcast_3}      nome=tvescola      channel=7      ip=239.128.1.207
&{mcast_4}      nome=sony          channel=641      ip=239.128.2.79
&{mcast_5}      nome=star          channel=642     ip=239.128.1.27
&{mcast_6}      nome=fx            channel=643      ip=239.128.1.33
&{mcast_7}      nome=axn           channel=644      ip=239.128.1.4
&{mcast_8}      nome=a&e           channel=645      ip=239.128.1.1
&{mcast_9}      nome=primeboxbrazil       channel=646      ip=239.128.2.78
&{mcast_10}     nome=tbs           channel=647      ip=239.128.2.230

@{grupos}       ${mcast_1}      
...             ${mcast_2}
...             ${mcast_3}
...             ${mcast_4}
...             ${mcast_5}
...             ${mcast_6}
...             ${mcast_7}
...             ${mcast_8}
...             ${mcast_9}
...             ${mcast_10}


*** Test Cases *** 

#Loga teste usando dicionario 
#    log to console  ${mcast_1.nome}
#    log to console  ${mcast_2.nome}

#Loga teste usando items especificos de uma lista de dicionarios 
#   log to console  ${grupos} \n
#    ${coisa} =    get from list       ${grupos}      1
#    log to console  minha coisa é: ${coisa} \n
#    log to console  o nome da minha coisa é: ${coisa.nome} \n

#    FOR     ${item}     IN      @{grupos}
#            log to console  \n o dicionario atual da lista é: ${item} \n
#           log to console  \n minha coisa é: ${item.nome} \n
#    END 

Prepare a new test session
    Remove thumbnails from old sessions

Create test cases dinamically
    #[Documentation]     Uses DinamicTestCases.Py to read the list and create one test case for each item of the list of dictionaries.
    FOR     ${item}     IN      @{grupos}
        #log to console     \n meu item é: ${item.ip}
        Add Test Case   Validate ${item.nome} at ${item.ip}   Validate channel       ${item.ip}
    END 

#
#Validate TV ${MCAST_LOCAL_643_FX}
#    Join a channel  ${MCAST_LOCAL_643_FX}
#    Check if there is video
#    Grab screenshots as evidence    ${MCAST_LOCAL_643_FX}


*** Keywords ***

#Join a channel
#   // NOTE:  KEYwords cannot read variables form variable sections, you need to declare internally. (e.g. set variable command)
#    [ tags ]	tutorial
#    ${CMD_VLC_PLAY} =   Set variable    cvlc
#       #// you must explode the arguments in multiple tabs to process. if you want to use a single string use argument shell=yes
#    ${result} =     Run Process     ${CMD_VLC_PLAY}     ${CMD_VLC_PLAY_ARG}  timeout=10s		
#    Log    ${result.stderr}

Remove thumbnails from old sessions
    ${result} =     Run Process     rm evidences/screenshots/*.jpg      shell=yes    
    Log    ${result.stdout} 

Validate channel 
    [Arguments]    ${mcast_ip}
    Join a channel      ${mcast_ip}
    Check if there is video
    Grab screenshots as evidence       ${mcast_ip}

Join a channel 
    [Arguments]    ${mcast_group}
    ${result} =     Run Process     cvlc rtp://@${mcast_group}:5001 --video-filter\=scene --scene-format\=jpg --scene-ratio\=24 --start-time\=0 --stop-time\=10 --scene-path\="/home/user/Documents/@projetos/robotframework/test/shell/evidences/screenshots" vlc://quit -vvv 2>&1 | tee temp/vlc_reproduction.log      shell=yes    timeout=10s
    Log    ${result.stdout} 

Check if there is video
    #[Documentation] Check in the logs of Join a channel it there is media descriptors for the stream (pid).
    ${result} =     Run Process     grep type\= temp/vlc_reproduction.log    shell=yes	
    Log    ${result.stdout}

Grab screenshots as evidence
    #[Documentation] Collect the screenshots generated by "Join a channel", provide thumbnail and clear the cache.
    [Arguments]    ${mcast_group}
    ${timestamp} =  Get current date
    ${result} =     Run Process     montage -geometry 320x180+4+4 -frame 5 -title "Group: ${mcast_group} Time: ${timestamp}" evidences/screenshots/scene*.jpg evidences/screenshots/${mcast_group}.jpg       shell=yes
    Log    ${result.stdout}    
    ${result} =     Run Process     rm evidences/screenshots/scene*.jpg     shell=yes
    Log    ${result.stdout}

Loggar
    [Arguments]    ${atributo}
    Log to console      ${atributo}